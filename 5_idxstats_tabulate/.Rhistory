)
### fix input DNA amounts for COI_spike species
# For PlatesEF & GH, the amts are 0.2, 0.4, 0.8
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" ~ 0.2,
mitogenome == "Coleoptera_Mordellidae_COI" ~ 0.4,
mitogenome == "Coleoptera_Elateridae_COI" ~ 0.8,
TRUE ~ input_amount
)
)
### add input_DNA amounts for mockgradient input species
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
experiment == "mockgradient" & mitogenome == "PlateJ_C1_ACE4226_Diptera_Syrphidae_Helophilus_lapponicus_idba_spades_consensus" ~ 2699,
experiment == "mockgradient" & mitogenome == "PlateI_H5_AAC1834_Diptera_Syrphidae_Parasyrphus_tarsatus_refsoup_Concatenated" ~ 1597,
experiment == "mockgradient" & mitogenome == "PlateI_G3_AAC6088_Diptera_Syrphidae_Syrphus_torvus_idba_spades_consensus" ~ 1228,
experiment == "mockgradient" & mitogenome == "PlateI_G11_AAB1982_Diptera_Syrphidae_Helophilus_groenlandicus_spades_pilon" ~ 945,
experiment == "mockgradient" & mitogenome == "197_AAG1686_Diptera_Muscidae_Spilogona_micans_IDBA_pilon" ~ 727,
experiment == "mockgradient" & mitogenome == "MITO_18_AAZ5252_Diptera_Tachinidae_Peleteria_aenea_SPADESmeta_pilon" ~ 559,
experiment == "mockgradient" & mitogenome == "MITO_26_ACA4207_Diptera_Muscidae_Spilogona_monacantha_IDBApilon" ~ 430,
experiment == "mockgradient" & mitogenome == "MITO_11_ABZ1244_Diptera_Anthomyiidae_Zaphne_occidentalis_IDBApilon" ~ 331,
experiment == "mockgradient" & mitogenome == "MITO_7_AAM9104_Diptera_Muscidae_Spilogona_almqvistii_IDBApilon" ~ 255,
experiment == "mockgradient" & mitogenome == "PlateI_G4_AAM7340_Diptera_Scathophagidae_Gonarcticus_arcticus_spades_pilon" ~ 196,
experiment == "mockgradient" & mitogenome == "MITO_8_AAD7664_Diptera_Muscidae_Drymeia_segnis_IDBApilon" ~ 151,
experiment == "mockgradient" & mitogenome == "MITO_24_AAC6873_Diptera_Muscidae_Limnophora_groenlandica_IDBApilon" ~ 116,
experiment == "mockgradient" & mitogenome == "464_AAZ4195_Diptera_Syrphidae_Platycheirus_groenlandicus_IDBA_pilon" ~ 89,
experiment == "mockgradient" & mitogenome == "MITO_22_ACM5032_Diptera_Muscidae_Lophosceles_minimus_IDBApilon" ~ 69,
experiment == "mockgradient" & mitogenome == "PlateI_G10_AAG2440_Diptera_Anthomyiidae_Eutrichota_tunicata_blastSpades_pilon" ~ 53,
experiment == "mockgradient" & mitogenome == "PlateI_D9_AAV1117_Diptera_Scathophagidae_Scathophaga_apicalis_spades_pilon" ~ 41,
experiment == "mockgradient" & mitogenome == "34_ACE7762_Diptera_Muscidae_Spilogona_denudata_IDBA_pilon_COIDET_AAP9046_Diptera_Muscidae_Spilogona_megastoma" ~ 31,
experiment == "mockgradient" & mitogenome == "PlateI_H1_ACR5253_Diptera_Scathophagidae_Scathophaga_nigripalpis_spades_pilon" ~ 24,
experiment == "mockgradient" & mitogenome == "soup_AAM9110_Diptera_Muscidae_Spilogona_novaesibiriae_geneiousmapping" ~ 20,
TRUE ~ input_amount
)
)
### set all other mockgradient species to NA
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
experiment == "mockgradient" & is.na(input_amount) ~ 0,
TRUE ~ input_amount
)
)
# for mockeven experiment, set input_amount for non-COI_spike species and non-inputDNA species to 0
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
experiment == "mockeven" &  # mockeven experiment
str_detect(mitogenome, "_COI$") == FALSE &   # non-COI_spike species
!(mitogenome %in% c("PlateI_G11_AAB1982_Diptera_Syrphidae_Helophilus_groenlandicus_spades_pilon", "197_AAG1686_Diptera_Muscidae_Spilogona_micans_IDBA_pilon", "MITO_18_AAZ5252_Diptera_Tachinidae_Peleteria_aenea_SPADESmeta_pilon", "MITO_26_ACA4207_Diptera_Muscidae_Spilogona_monacantha_IDBApilon", "MITO_11_ABZ1244_Diptera_Anthomyiidae_Zaphne_occidentalis_IDBApilon", "PlateJ_C1_ACE4226_Diptera_Syrphidae_Helophilus_lapponicus_idba_spades_consensus", "PlateI_H5_AAC1834_Diptera_Syrphidae_Parasyrphus_tarsatus_refsoup_Concatenated", "MITO_8_AAD7664_Diptera_Muscidae_Drymeia_segnis_IDBApilon", "PlateI_G3_AAC6088_Diptera_Syrphidae_Syrphus_torvus_idba_spades_consensus", "MITO_7_AAM9104_Diptera_Muscidae_Spilogona_almqvistii_IDBApilon", "PlateI_G4_AAM7340_Diptera_Scathophagidae_Gonarcticus_arcticus_spades_pilon", "MITO_24_AAC6873_Diptera_Muscidae_Limnophora_groenlandica_IDBApilon", "464_AAZ4195_Diptera_Syrphidae_Platycheirus_groenlandicus_IDBA_pilon", "MITO_22_ACM5032_Diptera_Muscidae_Lophosceles_minimus_IDBApilon", "PlateI_G10_AAG2440_Diptera_Anthomyiidae_Eutrichota_tunicata_blastSpades_pilon", "PlateI_D9_AAV1117_Diptera_Scathophagidae_Scathophaga_apicalis_spades_pilon", "34_ACE7762_Diptera_Muscidae_Spilogona_denudata_IDBA_pilon_COIDET_AAP9046_Diptera_Muscidae_Spilogona_megastoma", "PlateI_H1_ACR5253_Diptera_Scathophagidae_Scathophaga_nigripalpis_spades_pilon", "soup_AAM9110_Diptera_Muscidae_Spilogona_novaesibiriae_geneiousmapping", "608_AAA9651_Araneae_Lycosidae_Pardosa_glacialis_IDBA_pilon")) ~ 0, # species not added to the mocks
TRUE ~ input_amount
)
)
View(mocks_idx_meta_genomecov_GH)
names_EF <- names(mocks_idx_meta_genomecov_EF)
names_GH <- names(mocks_idx_meta_genomecov_GH)
identical(names_EF, names_GH) # TRUE
# bind rows together
mocks_idx_meta_genomecov_EFGH <- bind_rows(mocks_idx_meta_genomecov_EF, mocks_idx_meta_genomecov_GH)
# confirm 352 (mitogenomes + COICYTB + spikes)
mocks_idx_meta_genomecov_EFGH %>%
distinct(mitogenome) %>%
count()
mocks_idx_meta_genomecov_EFGH_MITOCOICYTB <- mocks_idx_meta_genomecov_EFGH
# view names
names(mocks_idx_meta_genomecov_EFGH_MITOCOICYTB)
rm(mocks_idx_meta_genomecov_EF, mocks_idx_meta_genomecov_GH, mocks_idx_meta_genomecov_EFGH)
MITOCOICYTBoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_349MITOCOICYTB_20190204"
# write_tsv(mocks_idx_meta_genomecov_EFGH_barcodes, file.path(barcodesoutputidxstatstabulatefolder, "mocks_idx_meta_genomecov_EFGH_minimap2_20190116_406barcodes.txt")) # output file for merging with the other RUN outputs
# #
# write_tsv(mocks_idx_meta_genomecov_EFGH_mitogenomes, file.path(mitogenomesoutputidxstatstabulatefolder, "mocks_idx_meta_genomecov_EFGH_minimap2_20190115_308mitogenomes.txt")) # output file for merging with the other RUN outputs
write_tsv(mocks_idx_meta_genomecov_EFGH_MITOCOICYTB, file.path(MITOCOICYTBoutputidxstatstabulatefolder, "mocks_idx_meta_genomecov_ABA2B2EFGH_minimap2_20190204_349MITOCOICYTB.txt")) # output file for merging with the other RUN outputs
MITOCOICYTBoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_349MITOCOICYTB_20190204"
# write_tsv(mocks_idx_meta_genomecov_EFGH_barcodes, file.path(barcodesoutputidxstatstabulatefolder, "mocks_idx_meta_genomecov_EFGH_minimap2_20190116_406barcodes.txt")) # output file for merging with the other RUN outputs
# #
# write_tsv(mocks_idx_meta_genomecov_EFGH_mitogenomes, file.path(mitogenomesoutputidxstatstabulatefolder, "mocks_idx_meta_genomecov_EFGH_minimap2_20190115_308mitogenomes.txt")) # output file for merging with the other RUN outputs
write_tsv(mocks_idx_meta_genomecov_EFGH_MITOCOICYTB, file.path(MITOCOICYTBoutputidxstatstabulatefolder, "mocks_idx_meta_genomecov_ABA2B2EFGH_minimap2_20190204_349MITOCOICYTB.txt")) # output file for merging with the other RUN outputs
# MITOCOICYTB
outputfolder <- "../../PlatesA2B2/A2B2_outputs_20190204_F2308_f0x2_q48_minimap2_349MITOCOICYTB"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesA2B2_20190204_349MITOCOICYTB.txt"
idx_meta_genomecov_A2B2 <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# MITOCOICYTB
outputfolder <- "../../PlatesA2B2/A2B2_outputs_20190204_F2308_f0x2_q48_minimap2_349MITOCOICYTB"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesA2B2_20190204_349MITOCOICYTB.txt"
idx_meta_genomecov_A2B2 <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# MITOCOICYTB
outputfolder <- "../../PlatesA2B2/A2B2_outputs_20190204_F2308_f0x2_q48_minimap2_349MITOCOICYTB"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesA2B2_20190204_349MITOCOICYTB.txt"
idx_meta_genomecov_A2B2 <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_A2B2$EI_RUN <- "idx_meta_genomecov_A2B2"
names(idx_meta_genomecov_A2B2)
idx_meta_genomecov_A2B2 <- idx_meta_genomecov_A2B2 %>%
dplyr::select(EI_RUN, DateTrap, Date, Plot, Trap, Week, mitogenome, COI_Species, mapped_reads, mt_length, sample, Full_name_of_the_sample, Year, Sample_alias, ArcDyn_Plate_name, lysis_buffer_proportion, PC = pct_coverage)
names(idx_meta_genomecov_A2B2)
# mitogenomes
outputfolder <- "../../../../2016/bulk_samples/PlatesAB_EI_20160512/AB_outputs_20190204_F2308_f0x2_q48_minimap2_349MITOCOICYTB"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesAB_20190204_349MITOCOICYTB.txt"
idx_meta_genomecov_AB <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_AB$EI_RUN <- "idx_meta_genomecov_AB"
names(idx_meta_genomecov_AB)
idx_meta_genomecov_AB <- idx_meta_genomecov_AB %>%
dplyr::select(EI_RUN, DateTrap, Date, Plot, Trap, Week, mitogenome, COI_Species, mapped_reads, mt_length, sample, Full_name_of_the_sample, Year, Sample_alias, ArcDyn_Plate_name, lysis_buffer_proportion, PC = pct_coverage)
names(idx_meta_genomecov_AB)
# mitogenomes
outputfolder <- "../../PlatesEF/EF_outputs_20190204_F2308_f0x2_q48_minimap2_349MITOCOICYTB"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesEF_20190204_349MITOCOICYTB.txt"
idx_meta_genomecov_EF <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE) # 308 values of column sample_reference are NA (i.e. one sample's worth). This is not important because this column is one of the library quality reference values.
idx_meta_genomecov_EF$EI_RUN <- "idx_meta_genomecov_EF"
names(idx_meta_genomecov_EF)
idx_meta_genomecov_EF <- idx_meta_genomecov_EF %>%
dplyr::select(EI_RUN, DateTrap, Date, Plot, Trap, Week, mitogenome, COI_Species, mapped_reads, mt_length, sample, Full_name_of_the_sample, Year, Sample_alias, ArcDyn_Plate_name, lysis_buffer_proportion, PC = pct_coverage)
names(idx_meta_genomecov_EF)
# mitogenomes # THEN MERGE THE MITOGENOME IDX_META_GENOMECOV FILES
outputfolder <- "../../PlatesGH/GH_outputs_20190204_F2308_f0x2_q48_minimap2_349MITOCOICYTB"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesGH_20190204_349MITOCOICYTB.txt"
idx_meta_genomecov_GH <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_GH$EI_RUN <- "idx_meta_genomecov_GH"
names(idx_meta_genomecov_GH)
idx_meta_genomecov_GH <- idx_meta_genomecov_GH %>%
dplyr::select(EI_RUN, DateTrap, Date, Plot, Trap, Week, mitogenome, COI_Species, mapped_reads, mt_length, sample, Full_name_of_the_sample, Year, Sample_alias, ArcDyn_Plate_name = Plate, lysis_buffer_proportion, PC = pct_coverage)
names(idx_meta_genomecov_GH)
names_AB <- names(idx_meta_genomecov_AB)
names_A2B2 <- names(idx_meta_genomecov_A2B2)
names_EF <- names(idx_meta_genomecov_EF)
names_GH <- names(idx_meta_genomecov_GH)
identical(names_AB, names_A2B2) # TRUE
identical(names_AB, names_EF) # TRUE
identical(names_AB, names_GH) # TRUE
# bind rows together
idx_meta_genomecov_ABA2B2EFGH <- bind_rows(idx_meta_genomecov_AB, idx_meta_genomecov_A2B2, idx_meta_genomecov_EF, idx_meta_genomecov_GH)
# put EI_RUN column first
idx_meta_genomecov_ABA2B2EFGH <- idx_meta_genomecov_ABA2B2EFGH %>%
dplyr::select(EI_RUN, everything())
# confirm 352 (mitogenomes + COICYTB + spikes)
idx_meta_genomecov_ABA2B2EFGH %>%
distinct(mitogenome) %>%
count()
idx_meta_genomecov_ABA2B2EFGH_MITOCOICYTB <- idx_meta_genomecov_ABA2B2EFGH
# view names
names(idx_meta_genomecov_ABA2B2EFGH_MITOCOICYTB)
rm(idx_meta_genomecov_A2B2, idx_meta_genomecov_AB, idx_meta_genomecov_EF, idx_meta_genomecov_GH, idx_meta_genomecov_ABA2B2EFGH)
MITOCOICYTBoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_349MITOCOICYTB_20190204"
write_tsv(idx_meta_genomecov_ABA2B2EFGH_MITOCOICYTB, file.path(MITOCOICYTBoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190204_349MITOCOICYTB.txt")) # output file for merging with the other RUN outputs
library(tidyverse)
library(readxl) # read excel spreadsheets
library(hablar) # data type conversion
library(arsenal) # utilities
# A2B2 resequenced (most of) the same samples as AB, but fortunately, Earlham Institute coded the AB samples as IPO3916/7_A1 and the A2B2 samples as PlateA/B_A1. So I can use this column to join with the other metadata
pathtofastqseqdata = "../.."
# PlatesAB
# sample identifier in soupdata has form IPO3916_A1, where IPO3916 is PlateA, IPO3917 is PlateB
fastq_read_counts_PlatesAB <- read_table(file.path( "../../../../2016/bulk_samples/PlatesAB_EI_20160512/fastq_read_counts_PlatesAB.txt"))
fastq_read_counts_PlatesAB <- fastq_read_counts_PlatesAB %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_") %>% # remove "Sample_" from beginning of string
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesA2B2
# sample identifier in soupdata has form PlateA_A1
fastq_read_counts_PlatesA2B2 <- read_table(file.path(pathtofastqseqdata, "PlatesA2B2/fastq_read_counts_PlatesA2B2.txt"))
fastq_read_counts_PlatesA2B2 <- fastq_read_counts_PlatesA2B2 %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_PRO1322_") %>% # remove "Sample_PRO1322_" from beginning of string
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesEF
fastq_read_counts_PlatesEF <- read_table(file.path(pathtofastqseqdata, "PlatesEF/fastq_read_counts_PlatesEF.txt"))
fastq_read_counts_PlatesEF <- fastq_read_counts_PlatesEF %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "_[ACGT]{9}-[ACGT]{6}") %>% # remove index sequence from end of string, e.g. _TAGGTTAGG-GCCAAT
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesGH
fastq_read_counts_PlatesGH <- read_table(file.path(pathtofastqseqdata, "PlatesGH/fastq_read_counts_PlatesGH.txt"))
fastq_read_counts_PlatesGH <- fastq_read_counts_PlatesGH %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_PRO1747_") %>% # remove index sequence from end of string, Sample_PRO1747_
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
fastq_read_counts_PlatesABA2B2EFGH <- bind_rows(fastq_read_counts_PlatesAB, fastq_read_counts_PlatesA2B2, fastq_read_counts_PlatesEF, fastq_read_counts_PlatesGH)
# sanity check: should have: "IPO3916" "IPO3917" "PlateA"  "PlateB"  "PlateE"  "PlateF"  "PlateG"  "PlateH"
fastq_read_counts_PlatesABA2B2EFGH %>%
dplyr::select(sample) %>%
tidyr::separate(sample, sep = "_", into = c("sampleprefix", "samplesuffix")) %>%
dplyr::count(sampleprefix) %>%
dplyr::arrange(sampleprefix)
rm(fastq_read_counts_PlatesAB, fastq_read_counts_PlatesA2B2, fastq_read_counts_PlatesEF, fastq_read_counts_PlatesGH)
MITOCOICYTBoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_349MITOCOICYTB_20190202"
MITOCOICYTBoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_349MITOCOICYTB_20190204"
MITOCOICYTBoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_349MITOCOICYTB_20190204"
idx_meta_genomecov_ABA2B2EFGH_barcodes <- read_delim(file.path(barcodesoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190116_406barcodes.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_ABA2B2EFGH_MITOCOICYTB <- read_delim(file.path(MITOCOICYTBoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190204_349MITOCOICYTB.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
MITOCOICYTBoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_349MITOCOICYTB_20190204"
idx_meta_genomecov_ABA2B2EFGH_barcodes <- read_delim(file.path(barcodesoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190116_406barcodes.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_ABA2B2EFGH_MITOCOICYTB <- read_delim(file.path(MITOCOICYTBoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190204_349MITOCOICYTB.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_ABA2B2EFGH_barcodes <- read_delim(file.path(barcodesoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190116_406barcodes.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
barcodesoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_406barcodes_20190116"
idx_meta_genomecov_ABA2B2EFGH_barcodes <- read_delim(file.path(barcodesoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190116_406barcodes.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# idx_meta_genomecov_ABA2B2EFGH_barcodes <- idx_meta_genomecov_ABA2B2EFGH
#
# rm(idx_meta_genomecov_A2B2, idx_meta_genomecov_AB, idx_meta_genomecov_EF, idx_meta_genomecov_GH, idx_meta_genomecov_ABA2B2EFGH)
# make species table from the Barcode names
barcodes <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::select(COI = mitogenome, COI_Species, COI_length = mt_length) %>%
dplyr::filter(COI_Species != "COI_Spike") %>% # remove COI_spike species
dplyr::select(-COI_Species) %>% # remove column indicating COI_spike species
distinct(COI, .keep_all = TRUE) %>% # keep only distinct values of mitogenome, should return 406
mutate(BOLD = COI) %>% # make new BOLD column with mitogenome
mutate(BOLD = str_extract(BOLD, "[A-Z]{3}[0-9]{4}$")) %>% # extract only the BOLD number
mutate(BOLD = str_c("BOLD:", BOLD)) # add "BOLD:" as prefix. Have to do it this way because some of the BOLD numbers are not prefixed by "BOLD:"
# extract individual taxonomic ranks and re-merge Species and BOLD_ID. Species and BOLD_ID are messy because the epithets can include multiple elements
# cf_extrema_ACI8982, sp_AAF9271, tridactylus_ACH0172, cf_extrema_ACI8982, AAN6605_NA
# the AAN6605_NA is when there was no species epithet in the original name, not even "sp"
barcodes <- barcodes %>%
tidyr::separate(COI, c("Order", "Family", "Genus", "Species", "BOLD_ID"), sep = "_", remove = FALSE, extra = "merge") %>%
tidyr::unite("Species_BOLD", c("Species", "BOLD_ID"))
# the info line of the COI_Barcode fasta file is already well formatted:
# Diptera_Anthomyiidae_Zaphne_divisa_BOLD:AAG2441
# Even this one can be parsed by first keeping together (extra = "merge") everything after the fourth column (tundrica_BOLD:AAG1723). then merge the Species and BOLD_ID  columns (frontata_tundrica_BOLD:AAG1723)
# Diptera_Anthomyiidae_Zaphne_frontata_tundrica_BOLD:AAG1723
# idx_meta_genomecov_ABA2B2EFGH_mitogenomes <- idx_meta_genomecov_ABA2B2EFGH
#
# rm(idx_meta_genomecov_A2B2, idx_meta_genomecov_AB, idx_meta_genomecov_EF, idx_meta_genomecov_GH, idx_meta_genomecov_ABA2B2EFGH)
# taxonomyfilepath <- "~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/6_referenceseqs_metadata/mitogenomes_barcodes"
taxonomyfilepath <- "../6_referenceseqs_metadata/mitogenomes_barcodes"
taxonomyfile <- "Species_for_mitogenome_sequencing_20190123.xlsx"
mitotaxonomies <- read_excel(file.path(taxonomyfilepath, taxonomyfile), sheet = "mitogenome_database", na = "NA") %>%
dplyr::filter(mitogenome_status != "failed") # 366
# mitogenome_status == "failed" indicates specimens that failed sequencing at Copenhagen and were then sent to EI. These species are given two rows. I only want the EI row
# 41 of the rows are COI_CytB sequences, as expected
mitotaxonomies <- mitotaxonomies %>%
dplyr::select(Yinqiu_mitogenome_fastaname, Order, Family, Genus, Species_BOLD)
mitotaxonomies <- mitotaxonomies %>%
tidyr::separate(Species_BOLD, sep = " ", into = c("Genus2", "Species_BOLD")) %>%
dplyr::select(-Genus2)
# ifelse(mitotaxonomies$Genus == mitotaxonomies$Genus2, 1, 0) # Genus and Genus2 are the same, so i can delete Genus2
mitotaxonomies$Species_BOLD <- str_replace(mitotaxonomies$Species_BOLD, "_BOLD", "__BOLD") # delimit species epithet and BOLD:number
mitotaxonomies <- mitotaxonomies %>%
tidyr::separate(Species_BOLD, sep = "__", into = c("Species", "BOLD"))
# separate species epithet and BOLD:number
# sanity check
mitotaxonomies %>% distinct(BOLD) %>% count() # 366 unique BOLD numbers
mitotaxonomies <-  left_join(idx_meta_genomecov_ABA2B2EFGH_MITOCOICYTB, mitotaxonomies, by = c("mitogenome" = "Yinqiu_mitogenome_fastaname")) %>%
dplyr::filter(COI_Species != "COI_Spike") %>% # remove COI_spike species
dplyr::select(-COI_Species) # remove column indicating COI_spike species
# names(mitotaxonomies)
mitotaxonomies <- mitotaxonomies %>%
dplyr::select(BOLD, Order, Family, Genus, mitogenome, mt_length) %>%
distinct(BOLD, .keep_all = TRUE) # merge and reduce to 349 unique mitogenomes and COICYTB sequences
# idx_meta_genomecov_ABA2B2EFGH_mitogenomes <- idx_meta_genomecov_ABA2B2EFGH
#
# rm(idx_meta_genomecov_A2B2, idx_meta_genomecov_AB, idx_meta_genomecov_EF, idx_meta_genomecov_GH, idx_meta_genomecov_ABA2B2EFGH)
# taxonomyfilepath <- "~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/6_referenceseqs_metadata/mitogenomes_barcodes"
taxonomyfilepath <- "../6_referenceseqs_metadata/mitogenomes_barcodes"
taxonomyfile <- "Species_for_mitogenome_sequencing_20190123.xlsx"
mitotaxonomies <- read_excel(file.path(taxonomyfilepath, taxonomyfile), sheet = "mitogenome_database", na = "NA") %>%
dplyr::filter(mitogenome_status != "failed") # 366
# mitogenome_status == "failed" indicates specimens that failed sequencing at Copenhagen and were then sent to EI. These species are given two rows. I only want the EI row
# 41 of the rows are COI_CytB sequences, as expected
mitotaxonomies <- mitotaxonomies %>%
dplyr::select(Yinqiu_mitogenome_fastaname, Order, Family, Genus, Species_BOLD)
mitotaxonomies <- mitotaxonomies %>%
tidyr::separate(Species_BOLD, sep = " ", into = c("Genus2", "Species_BOLD")) %>%
dplyr::select(-Genus2)
# ifelse(mitotaxonomies$Genus == mitotaxonomies$Genus2, 1, 0) # Genus and Genus2 are the same, so i can delete Genus2
mitotaxonomies$Species_BOLD <- str_replace(mitotaxonomies$Species_BOLD, "_BOLD", "__BOLD") # delimit species epithet and BOLD:number
mitotaxonomies <- mitotaxonomies %>%
tidyr::separate(Species_BOLD, sep = "__", into = c("Species", "BOLD"))
# separate species epithet and BOLD:number
# sanity check
mitotaxonomies %>% distinct(BOLD) %>% count() # 366 unique BOLD numbers
mitotaxonomies <-  left_join(idx_meta_genomecov_ABA2B2EFGH_MITOCOICYTB, mitotaxonomies, by = c("mitogenome" = "Yinqiu_mitogenome_fastaname")) %>%
dplyr::filter(COI_Species != "COI_Spike") %>% # remove COI_spike species
dplyr::select(-COI_Species) # remove column indicating COI_spike species
# names(mitotaxonomies)
mitotaxonomies <- mitotaxonomies %>%
dplyr::select(BOLD, Order, Family, Genus, mitogenome, mt_length) %>%
distinct(BOLD, .keep_all = TRUE) # merge and reduce to 349 unique mitogenomes and COICYTB sequences
names(barcodes)
# [1] "COI"          "Order"        "Family"       "Genus"        "Species_BOLD" "COI_length"
# [7] "BOLD"
names(mitotaxonomies)
# The Order, Family, Genus, and Species names can be different between the barcode and mitogenome names (e.g. because of situations where the same BOLDID is given two provisional genus names, but only one is present in one of the databases). We use the BOLDID as the matching index, so we have some flexibility about which name to use. I am keeping the barcode Latin names (*.x) as this list is longer.
species <- left_join(barcodes, mitotaxonomies, by = c("BOLD" = "BOLD")) %>%
dplyr::select(BOLD, Order = Order.x, Family = Family.x, Genus = Genus.x, Species_BOLD, mitogenome, COI, mt_length, COI_length)
# by = c("BOLD", "Order", "Family", "Genus"),
species$sp <- seq(nrow(species))
species$sp <- str_c("sp", species$sp)
# mark some species for removal before environmental analyses
species <- species %>%
mutate(omit_from_env = case_when(
Order %in% c("Sarcoptiformes", "Trombidiformes", "Entomobryomorpha", "Neelipleona", "Poduromorpha", "Symphypleona") ~ "Omit",
TRUE ~ "Keep"
)
)
species <- species %>%
dplyr::select(sp, everything(), omit_from_env)
# example code to remove the omit_from_env species and the column
# species <- species %>%
#     dplyr::filter(omit_from_env == "Keep") %>%  # remove the rows with these species
#     dplyr::select(-omit_from_env)   # remove this column
```
spikes <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::select(mitogenome, COI_Species) %>%
dplyr::filter(COI_Species == "COI_Spike") %>%
dplyr::select(mitogenome) %>%
distinct()
spikes$species <- seq(nrow(spikes))
spikes$species <- str_c("spike", spikes$species)
spikes <- spikes %>% dplyr::select(species, full.name = mitogenome)
env_design <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::mutate(run = EI_RUN) %>%
dplyr::mutate(EI_RUN = str_remove(EI_RUN, "idx_meta_genomecov_")) %>%
dplyr::mutate(DateTrapRun = str_c(DateTrap, "_", EI_RUN)) %>%
dplyr::mutate(lysis_buffer_proportion = 1 / lysis_buffer_proportion) %>% # for downstream analysis
dplyr::select(sample = DateTrapRun, date = Date, trap = Trap, run, lysis_buffer_proportion, mitogenome, COI_Species) %>%
dplyr::filter(COI_Species == "COI_Spike") %>%
dplyr::select(-COI_Species)
env_design <- env_design %>%
mutate(
inputDNA = case_when(
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" & run == "idx_meta_genomecov_AB" ~ 10,
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" & run == "idx_meta_genomecov_A2B2" ~ 10,
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" & run == "idx_meta_genomecov_EF" ~ 0.2,
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" & run == "idx_meta_genomecov_GH" ~ 0.2
)
)
env_design <- env_design %>%
mutate(
inputDNA = case_when(
mitogenome == "Coleoptera_Mordellidae_COI" & run == "idx_meta_genomecov_AB" ~ 20,
mitogenome == "Coleoptera_Mordellidae_COI" & run == "idx_meta_genomecov_A2B2" ~ 20,
mitogenome == "Coleoptera_Mordellidae_COI" & run == "idx_meta_genomecov_EF" ~ 0.4,
mitogenome == "Coleoptera_Mordellidae_COI" & run == "idx_meta_genomecov_GH" ~ 0.4,
TRUE ~ inputDNA
)
)
env_design <- env_design %>%
mutate(
inputDNA = case_when(
mitogenome == "Coleoptera_Elateridae_COI" & run == "idx_meta_genomecov_AB" ~ 40,
mitogenome == "Coleoptera_Elateridae_COI" & run == "idx_meta_genomecov_A2B2" ~ 40,
mitogenome == "Coleoptera_Elateridae_COI" & run == "idx_meta_genomecov_EF" ~ 0.8,
mitogenome == "Coleoptera_Elateridae_COI" & run == "idx_meta_genomecov_GH" ~ 0.8,
TRUE ~ inputDNA
)
)
env_design <- env_design %>%
tidyr::spread(mitogenome, inputDNA) %>%
dplyr::select(sample, date, trap, run, lysis_buffer_proportion, spike1 = Lepidoptera_Bombycidae_Bombyx_mori_COI, spike2 = Coleoptera_Mordellidae_COI, spike3 = Coleoptera_Elateridae_COI) %>%
arrange(run, date, trap)
names(env_design)
env_seq_depth <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::mutate(run = EI_RUN) %>%
dplyr::mutate(EI_RUN = str_remove(EI_RUN, "idx_meta_genomecov_")) %>%
dplyr::mutate(DateTrapRun = str_c(DateTrap, "_", EI_RUN)) %>%
dplyr::select(DateTrapRun, sample) %>%
distinct(DateTrapRun, .keep_all = TRUE)
env_seq_depth <- left_join(env_seq_depth, fastq_read_counts_PlatesABA2B2EFGH) %>%
dplyr::select(-sample) %>%
dplyr::select(sample = DateTrapRun, mitogenome_seqs = tot_num_seqs) %>%
arrange(sample)
env_data_COI <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::mutate(run = EI_RUN) %>%
dplyr::mutate(EI_RUN = str_remove(EI_RUN, "idx_meta_genomecov_")) %>%
dplyr::mutate(DateTrapRun = str_c(DateTrap, "_", EI_RUN)) %>%
dplyr::select(DateTrapRun, mitogenome, PC, mapped_reads, COI_Species)
env_data_COI <- left_join(env_data_COI, species, by = c("mitogenome" = "COI")) # this will generate extra Order.y, Family.y, Genus.y columns from the species dataframe. We ignore them
env_data_COI <- env_data_COI %>%
dplyr::select(sample = DateTrapRun, sp, PC, mapped_reads, mitogenome, COI_Species)
spikes # table of COI_spike species, to refer to for the code below
# add spike1,2,3 to sp column
env_data_COI <- env_data_COI %>%
mutate(
sp = case_when(
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" ~ "spike1",
mitogenome == "Coleoptera_Mordellidae_COI" ~ "spike2",
mitogenome == "Coleoptera_Elateridae_COI" ~ "spike3",
TRUE ~ as.character(sp)
)
)
env_data_COI <- env_data_COI %>%
dplyr::filter(mapped_reads > 0) %>%
dplyr::select(sample, sp, PC, mapped_reads)
env_data_COI <- env_data_COI %>%
mutate(
PC = case_when(
sp == "spike1" ~ NA_real_,
sp == "spike2" ~ NA_real_,
sp == "spike3" ~ NA_real_,
TRUE ~ PC
)
)
env_data_mitogenome <- idx_meta_genomecov_ABA2B2EFGH_MITOCOICYTB %>%
dplyr::mutate(run = EI_RUN) %>%
dplyr::mutate(EI_RUN = str_remove(EI_RUN, "idx_meta_genomecov_")) %>%
dplyr::mutate(DateTrapRun = str_c(DateTrap, "_", EI_RUN)) %>%
dplyr::select(DateTrapRun, mitogenome, PC, mapped_reads, COI_Species)
env_data_mitogenome <- left_join(env_data_mitogenome, species) # this will generate extra Order.y, Family.y, Genus.y columns from the species dataframe. We ignore them
env_data_mitogenome <- env_data_mitogenome %>%
dplyr::select(sample = DateTrapRun, sp, PC, mapped_reads, mitogenome, COI_Species)
spikes # table of COI_spike species, to refer to for the code below
# add spike1,2,3 to sp column
env_data_mitogenome <- env_data_mitogenome %>%
mutate(
sp = case_when(
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" ~ "spike1",
mitogenome == "Coleoptera_Mordellidae_COI" ~ "spike2",
mitogenome == "Coleoptera_Elateridae_COI" ~ "spike3",
TRUE ~ as.character(sp)
)
)
env_data_mitogenome <- env_data_mitogenome %>%
dplyr::filter(mapped_reads > 0) %>%
dplyr::select(sample, sp, PC, mapped_reads)
env_data_mitogenome <- env_data_mitogenome %>%
mutate(
PC = case_when(
sp == "spike1" ~ NA_real_,
sp == "spike2" ~ NA_real_,
sp == "spike3" ~ NA_real_,
TRUE ~ PC
)
)
barcodesoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_406barcodes_20190116"
# mitogenomesoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_308mitogenomes_20190115"
MITOCOICYTBoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_349MITOCOICYTB_20190204"
mocks_idx_meta_genomecov_EFGH_barcodes <- read_delim(file.path(barcodesoutputidxstatstabulatefolder, "mocks_idx_meta_genomecov_EFGH_minimap2_20190116_406barcodes.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_ABA2B2EFGH_MITOCOICYTB <- read_delim(file.path(MITOCOICYTBoutputidxstatstabulatefolder, "mocks_idx_meta_genomecov_ABA2B2EFGH_minimap2_20190204_349MITOCOICYTB.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
mocks_idx_meta_genomecov_EFGH_barcodes <-  mocks_idx_meta_genomecov_EFGH_barcodes %>%
mutate(
sample = case_when(
sample == "PlateGH_COI_1_negative_control" ~ "PlateGH_negative_control_1",
sample == "PlateGH_COI_2_negative_control" ~ "PlateGH_negative_control_2",
TRUE ~ as.character(sample)
)
)
mocks_idx_meta_genomecov_EFGH_barcodes$sample %>% unique()
# I use mocks_idx_meta_genomecov_EFGH_mitogenomes because the downstream statistical code use 'mitogenomes' for the long-reference mapping dataset
mocks_idx_meta_genomecov_EFGH_mitogenomes <-  idx_meta_genomecov_ABA2B2EFGH_MITOCOICYTB %>%
mutate(
sample = case_when(
sample == "PlateGH_COI_1_negative_control" ~ "PlateGH_negative_control_1",
sample == "PlateGH_COI_2_negative_control" ~ "PlateGH_negative_control_2",
TRUE ~ as.character(sample)
)
)
mocks_idx_meta_genomecov_EFGH_mitogenomes$sample %>% unique()
mock_design <- left_join(mocks_idx_meta_genomecov_EFGH_barcodes, species, by = c("mitogenome" = "COI")) # I can use either the barcodes or mitogenomes dataset
spikes # table of COI_spike species, to refer to for the code below
# add spike1,2,3 to sp column
mock_design <- mock_design %>%
mutate(
sp = case_when(
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" ~ "spike1",
mitogenome == "Coleoptera_Mordellidae_COI" ~ "spike2",
mitogenome == "Coleoptera_Elateridae_COI" ~ "spike3",
TRUE ~ as.character(sp)
)
)
mock_design <- mock_design %>%
dplyr::select(sample, plate, experiment, run, input_amount, input_sp = sp) %>%
dplyr::filter(input_amount > 0) %>%
arrange(experiment, plate, sample, run)
names(mocks_idx_meta_genomecov_EFGH_mitogenomes)
mock_data_mitogenome <- left_join(mocks_idx_meta_genomecov_EFGH_mitogenomes, species, by = c("mitogenome" = "mitogenome"))
spikes # table of COI_spike species, to refer to for the code below
# add spike1,2,3 to sp column
mock_data_mitogenome <- mock_data_mitogenome %>%
mutate(
sp = case_when(
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" ~ "spike1",
mitogenome == "Coleoptera_Mordellidae_COI" ~ "spike2",
mitogenome == "Coleoptera_Elateridae_COI" ~ "spike3",
TRUE ~ as.character(sp)
)
)
mock_data_mitogenome <- mock_data_mitogenome %>%
dplyr::select(sample, plate, experiment, run, sp, PC, mapped_reads) %>%
arrange(experiment, plate, sample, run)
names(mocks_idx_meta_genomecov_EFGH_barcodes)
mock_data_COI <- left_join(mocks_idx_meta_genomecov_EFGH_barcodes, species, by = c("mitogenome" = "COI"))
spikes # table of COI_spike species, to refer to for the code below
# add spike1,2,3 to sp column
mock_data_COI <- mock_data_COI %>%
mutate(
sp = case_when(
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" ~ "spike1",
mitogenome == "Coleoptera_Mordellidae_COI" ~ "spike2",
mitogenome == "Coleoptera_Elateridae_COI" ~ "spike3",
TRUE ~ as.character(sp)
)
)
mock_data_COI <- mock_data_COI %>%
dplyr::select(sample, plate, experiment, run, sp, PC, mapped_reads) %>%
arrange(experiment, plate, sample, run)
names(mocks_idx_meta_genomecov_EFGH_barcodes)
mock_seq_depth <- mocks_idx_meta_genomecov_EFGH_barcodes %>%
dplyr::select(sample, plate_well) %>%
distinct(sample, .keep_all = TRUE) %>%
arrange(sample)
mock_seq_depth <- left_join(mock_seq_depth, fastq_read_counts_PlatesABA2B2EFGH, by = c("plate_well" = "sample")) %>%
dplyr::select(-plate_well, mitogenome_seqs = tot_num_seqs) %>%
arrange(sample)
# setwd("~/Dropbox/Working_docs/Roslin_Greenland/2018/manuscript_methods/201901248_Ecoletts/Rcode/Rdata")
# getwd()
save(species, spikes, mock_design, mock_data_mitogenome, mock_data_COI,
env_design, env_data_mitogenome, env_data_COI, mock_seq_depth, env_seq_depth,
file = "input_data_step5_20190204.RData")
