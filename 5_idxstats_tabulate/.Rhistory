idx <- purrr::map(idx_files, loadFile1) # map is equivalent to lapply
# Code from:  Location 6472 in Buffalo, Vince. Bioinformatics Data Skills: Reproducible and Robust Research with Open Source Tools (Kindle Location 6493). O'Reilly Media. Kindle Edition.
# combine lists into a single dataframe (using do.call(rbind, idx)), reorder columns, delete unmapped_reads column, and remove rows that have "*" in the mitogenome field (the last line of each idxstats table)
idx <- do.call(rbind, idx) %>%
dplyr::select(mitogenome, mt_length, mapped_reads, sample, well, samtools_filter, pathname) %>%
dplyr::filter(mitogenome != "*")
# sanity checks
idx %>% distinct(well) %>% count()  # 94, number of distinct values of well, as a sanity check
idx %>% distinct(sample) %>% count()  # number of distinct values of sample:  171  I originally input 192, but only have 171 idx files due to failed samples (prev value 168 before i found the lane 11 file)
idx %>% distinct(pathname) %>% count()  # number of distinct values of sample:  171
idx %>% distinct(samtools_filter) %>% count() # number of distinct values of samtools_filter: should be 1
idx %>% distinct(samtools_filter) # should look something like:  F2308_f0x2_q48
idx_mitogenome_table <- idx %>% group_by(well) %>% distinct(mitogenome) %>% count() %>% arrange(desc(n)); View(idx_mitogenome_table) # mitogenomes: all columns should be 311 (308 + 3);  barcodes:  all cols should be 409 (406 + 3). sorted from largest to smallest.
length(idx$mitogenome) / idx_mitogenome_table[1,2] == idx %>% distinct(sample) %>% count()  # should evaluate to TRUE
cat("idxstatsgenomecoverfolder is: ", idxstatsgenomecovfolder)
cat("idxstatsfile search pattern is: ", idxstatsfile)
idx_files <- list.files(Sys.glob(file.path(idxstatsgenomecovfolder)), pattern = idxstatsfile, full.names = TRUE)
head(idx_files); cat("    ", length(idx_files), "total files")
# use this version for minimap2 mapping to 308mitogenomes
# outputs_PlatesA2B2_F2308_f0x2_q48_minimap2_outputs_20190115_308mitogenomes
idxstatsgenomecovfolder <- paste0("outputs_PlatesA2B2_", samtoolsfilter, "_", samtoolsqual, "_minimap2_outputs_20190115_308mitogenomes")  # this is the enclosing folder around the idxstats and genomcov files for a given set of soups
# this is where i store the outputs of this script
outputidxstatstabulatefolder <- "A2B2_outputs_20190115_F2308_f0x2_q48_minimap2_308mitogenomes"
idxstatsfile <- paste0("*", samtoolsfilter, "_", samtoolsqual, "_sorted.bam_idxstats\\.txt")
genomecovfile <- paste0("*", samtoolsfilter, "_", samtoolsqual, "_sorted_genomecov_d\\.txt\\.gz")
samplemetadatafolder <- "../ArcDyn_scripts/6_referenceseqs_metadata/PlatesAB_metadata"  # this is the enclosing folder around the sample metadata spreadsheet
samplemetadatafilename <- "Samples_for_sequencing_at_TGAC_Zackenberg_bulk_samples_April_2016_20160512.xlsx"
lysisbufferfilename <- "lysis_buffer_volumes_PlatesAB_A2B2_20180208.xlsx"  # this is based on Yinqiu's lysis buffer datasheet, which i edited a bit to make the sample names consistent so that tables could be joined via "Short_name_of_the_sample".  Also, i replaced missing data or cells with notes with NA
cat("idxstatsgenomecoverfolder is: ", idxstatsgenomecovfolder)
idx_files <- list.files(Sys.glob(file.path(idxstatsgenomecovfolder)), pattern = idxstatsfile, full.names = TRUE)
head(idx_files); cat("    ", length(idx_files), "total files")
# setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/PlatesA2B2")
setwd("../../PlatesA2B2") # go to folder with samtools/bedtools outputs
setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/5_idxstats_tabulate")
cat("idxstatsgenomecoverfolder is: ", idxstatsgenomecovfolder)
cat("idxstatsfile search pattern is: ", idxstatsfile)
idx_files <- list.files(Sys.glob(file.path(idxstatsgenomecovfolder)), pattern = idxstatsfile, full.names = TRUE)
head(idx_files); cat("    ", length(idx_files), "total files")
# setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/PlatesA2B2")
setwd("../../PlatesA2B2") # go to folder with samtools/bedtools outputs
getwd()
# setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/PlatesA2B2")
setwd("../../PlatesA2B2") # go to folder with samtools/bedtools outputs
getwd()
samtoolsfilter <- "F2308_f0x2" # f0x2 is for PROPER PAIR, there are also samtools outputs for F2308 only
samtoolsqual <- "q48"
# use this version for minimap2 mapping to 308mitogenomes
# outputs_PlatesA2B2_F2308_f0x2_q48_minimap2_outputs_20190115_308mitogenomes
idxstatsgenomecovfolder <- paste0("outputs_PlatesA2B2_", samtoolsfilter, "_", samtoolsqual, "_minimap2_outputs_20190115_308mitogenomes")  # this is the enclosing folder around the idxstats and genomcov files for a given set of soups
# this is where i store the outputs of this script
outputidxstatstabulatefolder <- "A2B2_outputs_20190115_F2308_f0x2_q48_minimap2_308mitogenomes"
# use this version for minimap2 mapping to 406 COI_barcodes
# idxstatsgenomecovfolder <- paste0("outputs_PlatesA2B2_", samtoolsfilter, "_", samtoolsqual, "_minimap2_outputs_20190116_406barcodes")  # this is the enclosing folder around the idxstats and genomcov files for a given set of soups
# outputs_PlatesA2B2_F2308_f0x2_q48_minimap2_outputs_20190116_406barcodes
# this is where i store the outputs of this script
# outputidxstatstabulatefolder <- "A2B2_outputs_20190116_F2308_f0x2_q48_minimap2_406barcodes"
idxstatsfile <- paste0("*", samtoolsfilter, "_", samtoolsqual, "_sorted.bam_idxstats\\.txt")
# e.g. "*F2308_f0x2_q1_sorted.bam_idxstats\\.txt"
# e.g. Sample_IPO3916_A2_F2308_q48_sorted.bam_idxstats.txt
# choose the filename suffix to match the desired samtools filter. precede with * as a wildcard. \\ is used to escape the . before txt (because it is read with grep as "any character" in list.files() below)
genomecovfile <- paste0("*", samtoolsfilter, "_", samtoolsqual, "_sorted_genomecov_d\\.txt\\.gz")
# e.g. ""*F2308_f0x2_q1_sorted_genomecov_d\\.txt\\.gz""
# choose the filename pattern to match the desired samtools filter. precede with * as a wildcard for the sample names (e.g. Sample_IPO3916_A10_).
samplemetadatafolder <- "../ArcDyn_scripts/6_referenceseqs_metadata/PlatesAB_metadata"  # this is the enclosing folder around the sample metadata spreadsheet
samplemetadatafilename <- "Samples_for_sequencing_at_TGAC_Zackenberg_bulk_samples_April_2016_20160512.xlsx"
lysisbufferfilename <- "lysis_buffer_volumes_PlatesAB_A2B2_20180208.xlsx"  # this is based on Yinqiu's lysis buffer datasheet, which i edited a bit to make the sample names consistent so that tables could be joined via "Short_name_of_the_sample".  Also, i replaced missing data or cells with notes with NA
cat("idxstatsgenomecoverfolder is: ", idxstatsgenomecovfolder)
cat("idxstatsfile search pattern is: ", idxstatsfile)
idx_files <- list.files(Sys.glob(file.path(idxstatsgenomecovfolder)), pattern = idxstatsfile, full.names = TRUE)
head(idx_files); cat("    ", length(idx_files), "total files")
# column names of idx files
idx_cols <- c("mitogenome", "mt_length", "mapped_reads", "unmapped_reads")
# function to read_tsv the file and extract metadata from the filename and pathname
loadFile1 <- function(x) {
# read in the four columns and store in df
df <- read_tsv(x,   # previously file.path(x)
col_names = idx_cols, na = "NA",
col_types = cols(
mitogenome = col_character(),
mt_length = col_integer(),
mapped_reads = col_integer(),
unmapped_reads = col_integer()
))
# read in filename, extract and sub in the first bit of the name, remove any filepaths (using basename) and store in df$sample.  example filename:
# Sample_PRO1322_PlateA_A1_F2308_f0x2_q1_sorted.bam_idxstats.txt # PlatesA2B2
df$sample <- sub("Sample_PRO1322_([A-Z, a-z]+_[A-Z, a-z, 0-9]+)_F[\\w]+_sorted.bam_idxstats.txt", "\\1", basename(x), perl=TRUE)
# \\w any letter, digit, underscore
# \\D any non-digit, \\d any digit
df$well <- sub("Sample_PRO1322_[A-Z, a-z]+_([A-Z, a-z, 0-9]+)_F[\\w]+_sorted.bam_idxstats.txt", "\\1", basename(x), perl=TRUE)
# extract well number from filename
# \\w any letter, digit, underscore
df$samtools_filter <- sub("Sample_PRO1322_[A-Z, a-z]+_[A-Z, a-z, 0-9]+_(F[\\w]+)_sorted.bam_idxstats.txt", "\\1", basename(x), perl=TRUE)
# extract samtools parameters from filename
df$pathname <- x
# store full pathname in df$pathname
# output is df
df
}
# lapply the loadFile() function to all of the idx_files, save the output in idx as a list
# I sometimes include package name in the command (purrr::map) when the command is generic enough that it might collide with command in another package. this is programming tic.
idx <- purrr::map(idx_files, loadFile1) # map is equivalent to lapply
# combine lists into a single dataframe (using do.call(rbind, idx)), reorder columns, delete unmapped_reads column, and remove rows that have "*" in the mitogenome field (the last line of each idxstats table)
idx <- do.call(rbind, idx) %>%
dplyr::select(mitogenome, mt_length, mapped_reads, sample, well, samtools_filter, pathname) %>%
dplyr::filter(mitogenome != "*")
# sanity checks
idx %>% distinct(well) %>% count()  # 94, number of distinct values of well, as a sanity check
idx %>% distinct(sample) %>% count()  # number of distinct values of sample:  171  I originally input 192, but only have 171 idx files due to failed samples (prev value 168 before i found the lane 11 file)
idx %>% distinct(pathname) %>% count()  # number of distinct values of sample:  171
idx %>% distinct(samtools_filter) %>% count() # number of distinct values of samtools_filter: should be 1
idx %>% distinct(samtools_filter) # should look something like:  F2308_f0x2_q48
idx_mitogenome_table <- idx %>% group_by(well) %>% distinct(mitogenome) %>% count() %>% arrange(desc(n)); View(idx_mitogenome_table) # mitogenomes: all columns should be 311 (308 + 3);  barcodes:  all cols should be 409 (406 + 3). sorted from largest to smallest.
samplemetadata <- read_excel(file.path(samplemetadatafolder, samplemetadatafilename), sheet = "original", na = "NA")
# use tidyr::separate to parse out metadata from Full_name_of_the_sample
samplemetadata <- samplemetadata %>%
tidyr::separate(Full_name_of_the_sample, c("Date", "Plot", "Trap", "Week"), sep = "_", remove = FALSE)
samplemetadata$Date <- as_date(ymd(samplemetadata$Date))
samplemetadata$Year <- year(samplemetadata$Date)
samplemetadata <- samplemetadata %>%
dplyr::select(Full_name_of_the_sample, Date, Year, Plot:Extraction_kit_protocol)
# use tidyr::unite to make Short_name_of_the_sample
samplemetadata <- samplemetadata %>%
tidyr::unite("Short_name_of_the_sample", c("Year", "Plot", "Trap", "Week"))
lysisbufferdata <- read_excel(file.path(samplemetadatafolder, lysisbufferfilename), sheet = "revised_sample_name", na = "NA")
lysisbufferdata <- lysisbufferdata %>%
dplyr::select(Short_name_of_the_sample, lysis_buffer_orig_total_ul, lysis_buffer_purified_ul)
samplemetadata <- left_join(samplemetadata, lysisbufferdata) # R message: "Joining, by = "Short_name_of_the_sample""
samplemetadata <- samplemetadata %>%
dplyr::mutate(lysis_buffer_proportion=lysis_buffer_orig_total_ul/lysis_buffer_purified_ul)
samplemetadata$lysis_buffer_proportion <- round(samplemetadata$lysis_buffer_proportion, 2) # round to 2 decimal places
samplemetadata <- samplemetadata %>%
rename(EI_sample="sample") # change column name "sample" to "EI_sample."  This column holds the sample name in the format IPO3916_A1
samplemetadata$sample <- str_c("Plate", substr(samplemetadata$ArcDyn_Plate_name, 1, 1), "_", samplemetadata$well)
# substr(samplemetadata$ArcDyn_Plate_name, 1, 1) # extract first character
# str_c # concatenate multiple strings into a single string
# alternative for substr is tidyr::str_sub(samplemetadata$ArcDyn_Plate_name, 1, 1)
idx_meta <- left_join(idx, samplemetadata) # R message:  "Joining, by = c("sample", "well")"
# use tidyr::separate to parse out metadata from Short_name_of_the_sample
idx_meta <- idx_meta %>%
tidyr::separate(Short_name_of_the_sample, c("Year", "Plot", "Trap", "Week"), sep = "_", remove = TRUE)
# sort columns, remove useless columns
idx_meta <- idx_meta %>%
dplyr::select(Date, Plot, Trap, Week, everything()) %>%
dplyr::select(-row, -column, -sample_reference, -species_name, -barcode_used, -Sample_type, -x.260_230_ratio, -x.260_280_ratio, -Quantification_method, -Buffer_used, -pathname, -TGAC_barcode, -Extraction_kit_protocol) %>%
dplyr::arrange(Date, Trap)
names(idx_meta) # compared to PlatesAB, there is an extra column:  EI_sample (e.g. IPO3916, IPO3917)
#  [1] "Date"                       "Plot"                       "Trap"
#  [4] "Week"                       "mitogenome"                 "mt_length"
#  [7] "mapped_reads"               "sample"                     "well"
# [10] "samtools_filter"            "Full_name_of_the_sample"    "Year"
# [13] "Sample_alias"               "ArcDyn_Plate_name"          "EI_Plate_name"
# [16] "EI_sample"                  "Concentration_ng_per_ul"    "Sample_volume_ul"
# [19] "lysis_buffer_orig_total_ul" "lysis_buffer_purified_ul"   "lysis_buffer_proportion"
# TIME SAVING STEP  After running once for mitogenomes and for barcodes, i save the file to avoid having to rerun the map() step
# read in genomecov files
genomecoverages_summ <- readRDS(file.path(outputidxstatstabulatefolder, "genomecoverages_summ_PlatesA2B2_20190115_308mitogenomes.RDS"))
# left_join genomecoverages_summ to idx_meta
idx_meta_genomecov <- left_join(idx_meta, genomecoverages_summ) # R message:  Joining, by = c("mitogenome", "sample", "well", "samtools_filter")
idx_meta_genomecov <- idx_meta_genomecov %>% arrange(Date, Trap)
# use grepl() to find mitogenome names that are COI spike names
idx_meta_genomecov$COI_Species <- if_else(grepl("_COI$", idx_meta_genomecov$mitogenome), "COI_Spike", "ArcDyn_Species") # this regex works for both the mitogenome and barcode datasets
# reorder the columns for convenience
idx_meta_genomecov <- idx_meta_genomecov %>%
dplyr::select(Date:mitogenome, COI_Species, mapped_reads, everything())
# change the names of the spikes from an old naming convention to the one that we want to use
# must do this at this stage, after joining idxstats and genomecov files
idx_meta_genomecov <-  idx_meta_genomecov %>%
mutate(
mitogenome = case_when(
mitogenome == "1-2_Lepidoptera_Bombycidae_Bombyx_mori_10ng_COI" ~  "Lepidoptera_Bombycidae_Bombyx_mori_COI",
mitogenome == "1-2_Lepidoptera_Bombycidae_Bombyx_mori_COI" ~ "Lepidoptera_Bombycidae_Bombyx_mori_COI",
mitogenome == "3-1_Coleoptera_Mordellidae_20ng_COI" ~ "Coleoptera_Mordellidae_COI",
mitogenome == "3-1_Coleoptera_Mordellidae_COI" ~ "Coleoptera_Mordellidae_COI",
mitogenome == "2-1_Coleoptera_Elateridae_40ng_COI" ~ "Coleoptera_Elateridae_COI",
mitogenome == "2-1_Coleoptera_Elateridae_COI" ~ "Coleoptera_Elateridae_COI",
TRUE ~ as.character(mitogenome)
)
)
names(idx_meta_genomecov)
View(idx_mitogenome_table)
View(idx_meta_genomecov)
View(idx_meta_genomecov)
View(idx_meta)
View(idx_meta_genomecov)
# rm(list=ls())
# setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/5_idxstats_tabulate")
library(tidyverse)
library(readxl)
library(lubridate)
sessionInfo()
# barcodes
outputfolder <- "../../PlatesA2B2/A2B2_outputs_20190116_F2308_f0x2_q48_minimap2_406barcodes"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesA2B2_20190116_406barcodes.txt"
idx_meta_genomecov_A2B2 <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/5_idxstats_tabulate")
# idx_meta_genomecov files
```{r load idx_meta_genomecov_A2B2 for barcodes}
# barcodes
outputfolder <- "../../PlatesA2B2/A2B2_outputs_20190116_F2308_f0x2_q48_minimap2_406barcodes"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesA2B2_20190116_406barcodes.txt"
idx_meta_genomecov_A2B2 <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_A2B2$EI_RUN <- "idx_meta_genomecov_A2B2"
names(idx_meta_genomecov_A2B2)
View(idx_meta_genomecov_A2B2)
idx_meta_genomecov_A2B2 <- idx_meta_genomecov_A2B2 %>%
dplyr::select(EI_RUN, DateTrap, Date, Plot, Trap, Week, mitogenome, COI_Species, mapped_reads, mt_length, sample, Full_name_of_the_sample, Year, Sample_alias, ArcDyn_Plate_name, lysis_buffer_proportion, PC = pct_coverage)
View(idx_meta_genomecov_A2B2)
# setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/PlatesA2B2")
# barcodes
outputfolder <- "../../PlatesA2B2/A2B2_outputs_20190116_F2308_f0x2_q48_minimap2_406barcodes"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesA2B2_20190116_406barcodes.txt"
idx_meta_genomecov_A2B2 <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_A2B2$EI_RUN <- "idx_meta_genomecov_A2B2"
names(idx_meta_genomecov_A2B2)
idx_meta_genomecov_A2B2 <- idx_meta_genomecov_A2B2 %>%
dplyr::select(EI_RUN, DateTrap, Date, Plot, Trap, Week, mitogenome, COI_Species, mapped_reads, mt_length, sample, Full_name_of_the_sample, Year, Sample_alias, ArcDyn_Plate_name, lysis_buffer_proportion, PC = pct_coverage)
names(idx_meta_genomecov_A2B2)
# barcodes
outputfolder <- "../../PlatesA2B2/A2B2_outputs_20190116_F2308_f0x2_q48_minimap2_406barcodes"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesA2B2_20190116_406barcodes.txt"
idx_meta_genomecov_A2B2 <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
View(idx_meta_genomecov_A2B2)
idx_meta_genomecov_A2B2$EI_RUN <- "idx_meta_genomecov_A2B2"
names(idx_meta_genomecov_A2B2)
# barcodes
outputfolder <- "../../../../2016/bulk_samples/PlatesAB_EI_20160512/AB_outputs_20190116_F2308_f0x2_q48_minimap2_406barcodes"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesAB_20190116_406barcodes.txt"
idx_meta_genomecov_AB <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_AB$EI_RUN <- "idx_meta_genomecov_AB"
names(idx_meta_genomecov_AB)
# barcodes
outputfolder <- "../../PlatesEF/EF_outputs_20190116_F2308_f0x2_q48_minimap2_406barcodes"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesEF_20190116_406barcodes.txt"
idx_meta_genomecov_EF <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE) # 308 values of column sample_reference are NA (i.e. one sample's worth). This is not important because this column is one of the library quality reference values.
idx_meta_genomecov_EF$EI_RUN <- "idx_meta_genomecov_EF"
names(idx_meta_genomecov_EF)
# barcodes # FIRST MERGE THE BARCODES IDX_META_GENOMECOV FILES
outputfolder <- "../../PlatesGH/GH_outputs_20190116_F2308_f0x2_q48_minimap2_406barcodes"
idxmetagenomcovfile <- "idx_meta_genomecov_PlatesGH_20190116_406barcodes.txt"
idx_meta_genomecov_GH <- read_delim(file.path(outputfolder, idxmetagenomcovfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_GH$EI_RUN <- "idx_meta_genomecov_GH"
names(idx_meta_genomecov_GH)
names_AB <- names(idx_meta_genomecov_AB)
names_A2B2 <- names(idx_meta_genomecov_A2B2)
names_EF <- names(idx_meta_genomecov_EF)
names_GH <- names(idx_meta_genomecov_GH)
identical(names_AB, names_A2B2) # TRUE
identical(names_AB, names_EF) # TRUE
identical(names_AB, names_GH) # TRUE
View(idx_meta_genomecov_A2B2)
View(idx_meta_genomecov_AB)
View(idx_meta_genomecov_A2B2)
View(idx_meta_genomecov_AB)
View(idx_meta_genomecov_EF)
View(idx_meta_genomecov_GH)
names(idx_meta_genomecov_A2B2)
names(idx_meta_genomecov_A2B2)
names(idx_meta_genomecov_AB)
names(idx_meta_genomecov_EF)
names(idx_meta_genomecov_GH)
View(idx_meta_genomecov_EF)
idx_meta_genomecov_A2B2_SRA <- idx_meta_genomecov_A2B2 %>% dplyr::select(EI_RUN, EI_sample, DateTrap, Full_name_of_the_sample, Date, Plot, Trap, Week)
names(idx_meta_genomecov_AB)
idx_meta_genomecov_AB_SRA <- idx_meta_genomecov_AB %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Full_name_of_the_sample, Date, Plot, Trap, Week)
names(idx_meta_genomecov_EF)
idx_meta_genomecov_EF_SRA <- idx_meta_genomecov_EF %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Full_name_of_the_sample, Date, Plot, Trap, Week)
names(idx_meta_genomecov_GH)
idx_meta_genomecov_GH_SRA <- idx_meta_genomecov_GH %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Full_name_of_the_sample, Date, Plot, Trap, Week)
View(idx_meta_genomecov_A2B2_SRA)
idx_meta_genomecov_A2B2_SRA <- idx_meta_genomecov_A2B2 %>% dplyr::select(EI_RUN, EI_sample, DateTrap, Full_name_of_the_sample, Date, Plot, Trap, Week) %>% distinct()
idx_meta_genomecov_AB_SRA <- idx_meta_genomecov_AB %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Full_name_of_the_sample, Date, Plot, Trap, Week) %>% distinct()
idx_meta_genomecov_EF_SRA <- idx_meta_genomecov_EF %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Full_name_of_the_sample, Date, Plot, Trap, Week) %>% distinct()
idx_meta_genomecov_GH_SRA <- idx_meta_genomecov_GH %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Full_name_of_the_sample, Date, Plot, Trap, Week) %>% distinct()
View(idx_meta_genomecov_AB)
View(idx_meta_genomecov_AB_SRA)
View(idx_meta_genomecov_EF_SRA)
View(idx_meta_genomecov_GH_SRA)
names(idx_meta_genomecov_A2B2)
idx_meta_genomecov_A2B2_SRA <- idx_meta_genomecov_A2B2 %>% dplyr::select(EI_RUN, EI_sample, DateTrap, Date, Plot, Trap, Week) %>% distinct()
names(idx_meta_genomecov_AB)
idx_meta_genomecov_AB_SRA <- idx_meta_genomecov_AB %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Date, Plot, Trap, Week) %>% distinct()
names(idx_meta_genomecov_EF)
idx_meta_genomecov_EF_SRA <- idx_meta_genomecov_EF %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Date, Plot, Trap, Week) %>% distinct()
names(idx_meta_genomecov_GH)
idx_meta_genomecov_GH_SRA <- idx_meta_genomecov_GH %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Date, Plot, Trap, Week) %>% distinct()
View(idx_meta_genomecov_A2B2_SRA)
names(idx_meta_genomecov_A2B2)
idx_meta_genomecov_A2B2_SRA <- idx_meta_genomecov_A2B2 %>% dplyr::select(EI_RUN, EI_sample, DateTrap, Date) %>% distinct()
names(idx_meta_genomecov_AB)
idx_meta_genomecov_AB_SRA <- idx_meta_genomecov_AB %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Date) %>% distinct()
names(idx_meta_genomecov_EF)
idx_meta_genomecov_EF_SRA <- idx_meta_genomecov_EF %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Date) %>% distinct()
names(idx_meta_genomecov_GH)
idx_meta_genomecov_GH_SRA <- idx_meta_genomecov_GH %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Date) %>% distinct()
idx_meta_genomecov_A2B2_SRA <- idx_meta_genomecov_A2B2 %>% dplyr::select(EI_RUN, EI_sample, DateTrap, Date) %>% distinct() %>% unite("sample_name", c("EI_RUN", "EI_sample", "DateTrap"))
View(idx_meta_genomecov_A2B2_SRA)
names(idx_meta_genomecov_AB)
idx_meta_genomecov_AB_SRA <- idx_meta_genomecov_AB %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Date) %>% distinct() %>% unite("sample_name", c("EI_RUN", "EI_sample", "DateTrap"))
names(idx_meta_genomecov_EF)
idx_meta_genomecov_EF_SRA <- idx_meta_genomecov_EF %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Date) %>% distinct() %>% unite("sample_name", c("EI_RUN", "EI_sample", "DateTrap"))
names(idx_meta_genomecov_GH)
idx_meta_genomecov_GH_SRA <- idx_meta_genomecov_GH %>% dplyr::select(EI_RUN, EI_sample = sample, DateTrap, Date) %>% distinct() %>% unite("sample_name", c("EI_RUN", "EI_sample", "DateTrap"))
View(idx_meta_genomecov_AB_SRA)
idx_meta_genome_cov_ABA2B2EFGH <- bind_rows(idx_meta_genomecov_AB, idx_meta_genomecov_A2B2, idx_meta_genomecov_EF, idx_meta_genomecov_GH)
idx_meta_genome_cov_ABA2B2EFGH_SRA <- bind_rows(idx_meta_genomecov_AB_SRA, idx_meta_genomecov_A2B2_SRA, idx_meta_genomecov_EF_SRA, idx_meta_genomecov_GH_SRA)
View(idx_meta_genome_cov_ABA2B2EFGH_SRA)
View(idx_meta_genome_cov_ABA2B2EFGH_SRA)
idx_meta_genome_cov_ABA2B2EFGH_SRA_test <- idx_meta_genome_cov_ABA2B2EFGH_SRA %>%
mutate(sample_name = str_extract(sample_name, "idx_meta_genomecov", "Run")) # extract only the BOLD number from the mitogenome name (here, the mitogenome name is really the Barcode name:  Araneae_Linyphiidae_Hilaira_vexatrix_BOLD:AAG5689)
idx_meta_genome_cov_ABA2B2EFGH_SRA_test <- idx_meta_genome_cov_ABA2B2EFGH_SRA %>%
mutate(sample_name2 = str_extract(sample_name, "idx_meta_genomecov", "Run"))
idx_meta_genome_cov_ABA2B2EFGH_SRA_test <- idx_meta_genome_cov_ABA2B2EFGH_SRA %>%
mutate(sample_name = str_replace(sample_name, "idx_meta_genomecov", "Run"))
View(idx_meta_genome_cov_ABA2B2EFGH_SRA_test)
View(idx_meta_genome_cov_ABA2B2EFGH_SRA)
View(idx_meta_genome_cov_ABA2B2EFGH_SRA_test)
View(idx_meta_genome_cov_ABA2B2EFGH_SRA)
View(idx_meta_genome_cov_ABA2B2EFGH_SRA_test)
idx_meta_genome_cov_ABA2B2EFGH_SRA <- idx_meta_genome_cov_ABA2B2EFGH_SRA %>%
mutate(sample_name = str_replace(sample_name, "idx_meta_genomecov", "Run"))
write_tsv(idx_meta_genome_cov_ABA2B2EFGH_SRA, "../not_included_in_repo/SRA_metadata/idx_meta_genome_cov_ABA2B2EFGH_SRA.txt") # output file for merging with the other RUN outputs
outputfolder <- "../../PlatesEF/EF_outputs_20190116_F2308_f0x2_q48_minimap2_406barcodes"
mockoutputfile <- "mocks_idx_meta_genomecov_PlatesEF_20190116_406barcodes.txt"
mocks_idx_meta_genomecov_EF <- read_delim(file.path(outputfolder, mockoutputfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
names(mocks_idx_meta_genomecov_EF)
### input correct input_DNA values for the three COI_spike species
# For PlatesEF & GH, the amts are 0.2, 0.4, 0.8
mocks_idx_meta_genomecov_EF <- mocks_idx_meta_genomecov_EF %>%
mutate(input_amount = case_when(
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" ~ 0.2,
mitogenome == "Coleoptera_Mordellidae_COI" ~ 0.4,
mitogenome == "Coleoptera_Elateridae_COI" ~ 0.8,
TRUE ~ as.numeric(input_amount)
)
)
# for non-COI_spike species, and non-inputDNA species, set input_amount to 0
mocks_idx_meta_genomecov_EF <- mocks_idx_meta_genomecov_EF %>%
mutate(input_amount = case_when(
str_detect(mitogenome, "_COI$") == FALSE & !(mitogenome %in% c("Diptera_Syrphidae_Helophilus_lapponicus_BOLD:ACE4226", "Diptera_Syrphidae_Parasyrphus_tarsatus_BOLD:AAC1834", "Diptera_Syrphidae_Syrphus_torvus_BOLD:AAC6088", "Diptera_Syrphidae_Helophilus_groenlandicus_BOLD:AAB1982", "Diptera_Muscidae_Spilogona_micans_BOLD:AAG1686", "Diptera_Tachinidae_Peleteria_aenea_BOLD:AAZ5252", "Diptera_Muscidae_Spilogona_monacantha_BOLD:ACA4207", "Diptera_Anthomyiidae_Zaphne_occidentalis_BOLD:ABZ1244", "Diptera_Muscidae_Spilogona_almqvistii_BOLD:AAM9104", "Diptera_Scathophagidae_Gonarcticus_arcticus_BOLD:AAM7340", "Diptera_Muscidae_Drymeia_segnis_BOLD:AAD7664", "Diptera_Muscidae_Limnophora_groenlandica_BOLD:AAC6873", "Diptera_Syrphidae_Platycheirus_groenlandicus_BOLD:AAZ4195", "Diptera_Muscidae_Lophosceles_minimus_BOLD:ACM5032", "Diptera_Anthomyiidae_Eutrichota_tunicata_BOLD:AAG2440", "Diptera_Scathophagidae_Scathophaga_apicalis_BOLD:AAV1117", "Diptera_Muscidae_Spilogona_megastoma_BOLD:AAP9046", "Diptera_Scathophagidae_Scathophaga_nigripalpis_BOLD:ACR5253", "Diptera_Muscidae_Spilogona_novaesibiriae_BOLD:AAM9110", "Araneae_Lycosidae_Pardosa_glacialis_BOLD:AAA9651")) ~ 0,
TRUE ~ as.numeric(input_amount)
)
)
# setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/PlatesGH")
outputfolder <- "../../PlatesGH/GH_outputs_20190116_F2308_f0x2_q48_minimap2_406barcodes"
mockoutputfile <- "mocks_idx_meta_genomecov_PlatesGH_20190116_406barcodes.txt"
mocks_idx_meta_genomecov_GH <- read_delim(file.path(outputfolder, mockoutputfile), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
names(mocks_idx_meta_genomecov_GH)
# set all negative control input amounts to 0
# this includes the spikes, which i fix in the next step
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
experiment == "negctrl" ~ 0,
TRUE ~ input_amount # mockevens already have input_amount values. keep them
)
)
### fix input DNA amounts for COI_spike species
# For PlatesEF & GH, the amts are 0.2, 0.4, 0.8
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" ~ 0.2,
mitogenome == "Coleoptera_Mordellidae_COI" ~ 0.4,
mitogenome == "Coleoptera_Elateridae_COI" ~ 0.8,
TRUE ~ input_amount
)
)
### add input_DNA amounts for mockgradient input species
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
experiment == "mockgradient" & mitogenome == "Diptera_Syrphidae_Helophilus_lapponicus_BOLD:ACE4226" ~ 2699,
experiment == "mockgradient" & mitogenome == "Diptera_Syrphidae_Parasyrphus_tarsatus_BOLD:AAC1834" ~ 1597,
experiment == "mockgradient" & mitogenome == "Diptera_Syrphidae_Syrphus_torvus_BOLD:AAC6088" ~ 1228,
experiment == "mockgradient" & mitogenome == "Diptera_Syrphidae_Helophilus_groenlandicus_BOLD:AAB1982" ~ 945,
experiment == "mockgradient" & mitogenome == "Diptera_Muscidae_Spilogona_micans_BOLD:AAG1686" ~ 727,
experiment == "mockgradient" & mitogenome == "Diptera_Tachinidae_Peleteria_aenea_BOLD:AAZ5252" ~ 559,
experiment == "mockgradient" & mitogenome == "Diptera_Muscidae_Spilogona_monacantha_BOLD:ACA4207" ~ 430,
experiment == "mockgradient" & mitogenome == "Diptera_Anthomyiidae_Zaphne_occidentalis_BOLD:ABZ1244" ~ 331,
experiment == "mockgradient" & mitogenome == "Diptera_Muscidae_Spilogona_almqvistii_BOLD:AAM9104" ~ 255,
experiment == "mockgradient" & mitogenome == "Diptera_Scathophagidae_Gonarcticus_arcticus_BOLD:AAM7340" ~ 196,
experiment == "mockgradient" & mitogenome == "Diptera_Muscidae_Drymeia_segnis_BOLD:AAD7664" ~ 151,
experiment == "mockgradient" & mitogenome == "Diptera_Muscidae_Limnophora_groenlandica_BOLD:AAC6873" ~ 116,
experiment == "mockgradient" & mitogenome == "Diptera_Syrphidae_Platycheirus_groenlandicus_BOLD:AAZ4195" ~ 89,
experiment == "mockgradient" & mitogenome == "Diptera_Muscidae_Lophosceles_minimus_BOLD:ACM5032" ~ 69,
experiment == "mockgradient" & mitogenome == "Diptera_Anthomyiidae_Eutrichota_tunicata_BOLD:AAG2440" ~ 53,
experiment == "mockgradient" & mitogenome == "Diptera_Scathophagidae_Scathophaga_apicalis_BOLD:AAV1117" ~ 41,
experiment == "mockgradient" & mitogenome == "Diptera_Muscidae_Spilogona_megastoma_BOLD:AAP9046" ~ 31,
experiment == "mockgradient" & mitogenome == "Diptera_Scathophagidae_Scathophaga_nigripalpis_BOLD:ACR5253" ~ 24,
experiment == "mockgradient" & mitogenome == "Diptera_Muscidae_Spilogona_novaesibiriae_BOLD:AAM9110" ~ 20,
TRUE ~ input_amount
)
)
### set all other mockgradient species to NA
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
experiment == "mockgradient" & is.na(input_amount) ~ 0,
TRUE ~ input_amount
)
)
# for mockeven experiment, set input_amount for non-COI_spike species and non-inputDNA species to 0
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
experiment == "mockeven" &  # mockeven experiment
str_detect(mitogenome, "_COI$") == FALSE &   # non-COI_spike species
!(mitogenome %in% c("Diptera_Syrphidae_Helophilus_lapponicus_BOLD:ACE4226",  "Diptera_Syrphidae_Parasyrphus_tarsatus_BOLD:AAC1834", "Diptera_Syrphidae_Syrphus_torvus_BOLD:AAC6088", "Diptera_Syrphidae_Helophilus_groenlandicus_BOLD:AAB1982", "Diptera_Muscidae_Spilogona_micans_BOLD:AAG1686", "Diptera_Tachinidae_Peleteria_aenea_BOLD:AAZ5252", "Diptera_Muscidae_Spilogona_monacantha_BOLD:ACA4207", "Diptera_Anthomyiidae_Zaphne_occidentalis_BOLD:ABZ1244", "Diptera_Muscidae_Spilogona_almqvistii_BOLD:AAM9104", "Diptera_Scathophagidae_Gonarcticus_arcticus_BOLD:AAM7340", "Diptera_Muscidae_Drymeia_segnis_BOLD:AAD7664", "Diptera_Muscidae_Limnophora_groenlandica_BOLD:AAC6873", "Diptera_Syrphidae_Platycheirus_groenlandicus_BOLD:AAZ4195", "Diptera_Muscidae_Lophosceles_minimus_BOLD:ACM5032", "Diptera_Anthomyiidae_Eutrichota_tunicata_BOLD:AAG2440", "Diptera_Scathophagidae_Scathophaga_apicalis_BOLD:AAV1117", "Diptera_Muscidae_Spilogona_megastoma_BOLD:AAP9046", "Diptera_Scathophagidae_Scathophaga_nigripalpis_BOLD:ACR5253", "Diptera_Muscidae_Spilogona_novaesibiriae_BOLD:AAM9110", "Araneae_Lycosidae_Pardosa_glacialis_BOLD:AAA9651")) ~ 0, # species not added to the mocks
TRUE ~ input_amount
)
)
View(mocks_idx_meta_genomecov_EF)
View(mocks_idx_meta_genomecov_GH)
# mocks
mocks_idx_meta_genomecov_EF_test <- mocks_idx_meta_genomecov_EF %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
View(mocks_idx_meta_genomecov_GH)
View(mocks_idx_meta_genomecov_EF_test)
# mocks
mocks_idx_meta_genomecov_EF_test <- mocks_idx_meta_genomecov_EF %>%
distinct() # %>%
View(mocks_idx_meta_genomecov_EF_test)
# mocks
mocks_idx_meta_genomecov_EF_test <- mocks_idx_meta_genomecov_EF %>%
dplyr::select(-mitogenome) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
View(mocks_idx_meta_genomecov_EF_test)
# mocks
mocks_idx_meta_genomecov_EF_test <- mocks_idx_meta_genomecov_EF %>%
dplyr::select(-mitogenome, -mapped_reads) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
# mocks
mocks_idx_meta_genomecov_EF_test <- mocks_idx_meta_genomecov_EF %>%
dplyr::select(-mitogenome, -mapped_reads, -PC) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
# mocks
mocks_idx_meta_genomecov_EF_test <- mocks_idx_meta_genomecov_EF %>%
dplyr::select(-mitogenome, -mapped_reads, -PC, input_amount) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
View(mocks_idx_meta_genomecov_EF_test)
# mocks
mocks_idx_meta_genomecov_EF_test <- mocks_idx_meta_genomecov_EF %>%
dplyr::select(-mitogenome, -mapped_reads, -PC, -input_amount) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
View(mocks_idx_meta_genomecov_EF_test)
# mocks
mocks_idx_meta_genomecov_EF <- mocks_idx_meta_genomecov_EF %>%
dplyr::select(-mitogenome, -mapped_reads, -PC, -input_amount) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
mocks_idx_meta_genomecov_GH_test <- mocks_idx_meta_genomecov_GH %>%
dplyr::select(-mitogenome, -mapped_reads, -PC, -input_amount) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
View(mocks_idx_meta_genomecov_GH_test)
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
dplyr::select(-mitogenome, -mapped_reads, -PC, -input_amount) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
mocks_idx_meta_genomecov_EFGH <- bind_rows(mocks_idx_meta_genomecov_EF, mocks_idx_meta_genomecov_GH)
# mocks
mocks_idx_meta_genomecov_EF <- mocks_idx_meta_genomecov_EF %>%
dplyr::select(-mitogenome, -mapped_reads, -PC, -input_amount) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
dplyr::select(-mitogenome, -mapped_reads, -PC, -input_amount) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
mocks_idx_meta_genomecov_EFGH <- bind_rows(mocks_idx_meta_genomecov_EF, mocks_idx_meta_genomecov_GH)
View(mocks_idx_meta_genomecov_EFGH)
mocks_idx_meta_genomecov_EFGH <- bind_rows(mocks_idx_meta_genomecov_EF, mocks_idx_meta_genomecov_GH) %>%
dplyr::select(sample_name)
View(mocks_idx_meta_genomecov_EFGH)
mocks_idx_meta_genomecov_EFGH$date <- NA_character_
View(mocks_idx_meta_genomecov_EFGH)
# mocks
mocks_idx_meta_genomecov_EF <- mocks_idx_meta_genomecov_EF %>%
dplyr::select(-mitogenome, -mapped_reads, -PC, -input_amount) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
dplyr::select(-mitogenome, -mapped_reads, -PC, -input_amount) %>%
distinct() %>%
mutate(sample = str_replace(sample, "PlateEF_", "")) %>%
unite("sample_name", c("plate_well", "sample"))
mocks_idx_meta_genomecov_EFGH_SRA <- bind_rows(mocks_idx_meta_genomecov_EF, mocks_idx_meta_genomecov_GH) %>%
dplyr::select(sample_name)
mocks_idx_meta_genomecov_EFGH_SRA$date <- NA_character_
View(mocks_idx_meta_genomecov_EFGH_SRA)
ArcDyn_samples_mocks_ABA2B2EFGH_SRA <- bind_rows(idx_meta_genome_cov_ABA2B2EFGH_SRA, mocks_idx_meta_genomecov_EFGH_SRA)
View(ArcDyn_samples_mocks_ABA2B2EFGH_SRA)
mocks_idx_meta_genomecov_EFGH_SRA <- bind_rows(mocks_idx_meta_genomecov_EF, mocks_idx_meta_genomecov_GH) %>%
dplyr::select(sample_name)
mocks_idx_meta_genomecov_EFGH_SRA$Date <- NA_character_
ArcDyn_samples_mocks_ABA2B2EFGH_SRA <- bind_rows(idx_meta_genome_cov_ABA2B2EFGH_SRA, mocks_idx_meta_genomecov_EFGH_SRA)
View(ArcDyn_samples_mocks_ABA2B2EFGH_SRA)
write_tsv(ArcDyn_samples_mocks_ABA2B2EFGH_SRA, "../not_included_in_repo/SRA_metadata/ArcDyn_samples_mocks_ABA2B2EFGH_SRA.txt") # output file for merging with the other RUN outputs
View(ArcDyn_samples_mocks_ABA2B2EFGH_SRA)
