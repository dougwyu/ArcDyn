library(pacman)
p_load(collapsibleTree)
p_data(collapsibleTree)
p_functions(collapsibleTree())
p_functions(collapsibleTree
)
p_data(mvabund)
mvabund_data <- p_data(mvabund)
p_load(mvabund)
data(Tasmania)
View(Tasmania)
View(spider)
data(spider)
View(spider)
View(spider[["abund"]])
spider[["x"]]
View(Tasmania)
Tasmania[["abund"]]
Tasmania[["copepods"]]
Tasmania[["nematodes"]]
Tasmania[["treatment"]]
Tasmania[["block"]]
Tasmania[["tr.block"]]
pacman::p_load(c("tidyverse", "readxl"))
install.packages("WriteXLS")
# Chunk 1
library(tidyverse)
# Chunk 2
# rm(list = ls())
# Chunk 3: combine swarm_12S
pathtoprotaxout <- "~/src/screenforbio-mbc-ailaoshan/"
w_protaxout_swarm_12S_class <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_swarm_12S", paste0("all_12S_20180317_otu_table_swarm_lulu.", "w_class_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "class")) %>%
mutate(prob_class = exp(log_prob)) %>%
select(queryID, class, prob_class)
w_protaxout_swarm_12S_order <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_swarm_12S", paste0("all_12S_20180317_otu_table_swarm_lulu.", "w_order_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "order")) %>%
mutate(prob_order = exp(log_prob)) %>%
select(queryID, order, prob_order)
w_protaxout_swarm_12S_family <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_swarm_12S", paste0("all_12S_20180317_otu_table_swarm_lulu.", "w_family_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "family")) %>%
mutate(prob_family = exp(log_prob)) %>%
select(queryID, family, prob_family)
w_protaxout_swarm_12S_genus <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_swarm_12S", paste0("all_12S_20180317_otu_table_swarm_lulu.", "w_genus_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "genus")) %>%
mutate(prob_genus = exp(log_prob)) %>%
select(queryID, genus, prob_genus)
w_protaxout_swarm_12S_species <- read.delim(file.path(pathtoprotaxout, "w_protaxout_swarm_12S", paste0("all_12S_20180317_otu_table_swarm_lulu.", "w_species_probs_sim")), stringsAsFactors = FALSE, sep = " ", col.names = c("queryID", "taxID", "log_prob", "level", "species", "bestHit_similarity", "bestHit")) %>%
mutate(prob_species = exp(log_prob)) %>%
mutate(taxID = na_if(taxID, "")) %>%
mutate(species = na_if(species, "")) %>%
select(queryID, species, prob_species, bestHit_similarity, bestHit)
w_protaxout_swarm_12S_all <- w_protaxout_swarm_12S_class %>%
left_join(w_protaxout_swarm_12S_order) %>%
left_join(w_protaxout_swarm_12S_family) %>%
left_join(w_protaxout_swarm_12S_genus) %>%
left_join(w_protaxout_swarm_12S_species)
# Chunk 4: combine usearch_12S
pathtoprotaxout <- "~/src/screenforbio-mbc-ailaoshan/"
w_protaxout_usearch_12S_class <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_usearch_12S", paste0("all_12S_20180317_otu_table_usearchderep_lulu.", "w_class_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "class")) %>%
mutate(prob_class = exp(log_prob)) %>%
select(queryID, class, prob_class)
w_protaxout_usearch_12S_order <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_usearch_12S", paste0("all_12S_20180317_otu_table_usearchderep_lulu.", "w_order_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "order")) %>%
mutate(prob_order = exp(log_prob)) %>%
select(queryID, order, prob_order)
w_protaxout_usearch_12S_family <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_usearch_12S", paste0("all_12S_20180317_otu_table_usearchderep_lulu.", "w_family_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "family")) %>%
mutate(prob_family = exp(log_prob)) %>%
select(queryID, family, prob_family)
w_protaxout_usearch_12S_genus <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_usearch_12S", paste0("all_12S_20180317_otu_table_usearchderep_lulu.", "w_genus_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "genus")) %>%
mutate(prob_genus = exp(log_prob)) %>%
select(queryID, genus, prob_genus)
w_protaxout_usearch_12S_species <- read.delim(file.path(pathtoprotaxout, "w_protaxout_usearch_12S", paste0("all_12S_20180317_otu_table_usearchderep_lulu.", "w_species_probs_sim")), stringsAsFactors = FALSE, sep = " ", col.names = c("queryID", "taxID", "log_prob", "level", "species", "bestHit_similarity", "bestHit")) %>%
mutate(prob_species = exp(log_prob)) %>%
mutate(taxID = na_if(taxID, "")) %>%
mutate(species = na_if(species, "")) %>%
select(queryID, species, prob_species, bestHit_similarity, bestHit)
w_protaxout_usearch_12S_all <- w_protaxout_usearch_12S_class %>%
left_join(w_protaxout_usearch_12S_order) %>%
left_join(w_protaxout_usearch_12S_family) %>%
left_join(w_protaxout_usearch_12S_genus) %>%
left_join(w_protaxout_usearch_12S_species)
# Chunk 5: combine swarm_16S
pathtoprotaxout <- "~/src/screenforbio-mbc-ailaoshan/"
w_protaxout_swarm_16S_class <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_swarm_16S", paste0("all_16S_20180321_otu_table_swarm_lulu.", "w_class_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "class")) %>%
mutate(prob_class = exp(log_prob)) %>%
select(queryID, class, prob_class)
w_protaxout_swarm_16S_order <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_swarm_16S", paste0("all_16S_20180321_otu_table_swarm_lulu.", "w_order_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "order")) %>%
mutate(prob_order = exp(log_prob)) %>%
select(queryID, order, prob_order)
w_protaxout_swarm_16S_family <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_swarm_16S", paste0("all_16S_20180321_otu_table_swarm_lulu.", "w_family_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "family")) %>%
mutate(prob_family = exp(log_prob)) %>%
select(queryID, family, prob_family)
w_protaxout_swarm_16S_genus <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_swarm_16S", paste0("all_16S_20180321_otu_table_swarm_lulu.", "w_genus_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "genus")) %>%
mutate(prob_genus = exp(log_prob)) %>%
select(queryID, genus, prob_genus)
w_protaxout_swarm_16S_species <- read.delim(file.path(pathtoprotaxout, "w_protaxout_swarm_16S", paste0("all_16S_20180321_otu_table_swarm_lulu.", "w_species_probs_sim")), stringsAsFactors = FALSE, sep = " ", col.names = c("queryID", "taxID", "log_prob", "level", "species", "bestHit_similarity", "bestHit")) %>%
mutate(prob_species = exp(log_prob)) %>%
mutate(taxID = na_if(taxID, "")) %>%
mutate(species = na_if(species, "")) %>%
select(queryID, species, prob_species, bestHit_similarity, bestHit)
w_protaxout_swarm_16S_all <- w_protaxout_swarm_16S_class %>%
left_join(w_protaxout_swarm_16S_order) %>%
left_join(w_protaxout_swarm_16S_family) %>%
left_join(w_protaxout_swarm_16S_genus) %>%
left_join(w_protaxout_swarm_16S_species)
pathtoprotaxout <- "~/src/screenforbio-mbc-ailaoshan/"
setwd(pathtoprotaxout)
# setwd(pathtoprotaxout)
w_protaxout_swarm_12S_class <- read_tsv(file.path(pathtoprotaxout, "w_protaxout_swarm_12S", paste0("all_12S_20180317_otu_table_swarm_lulu.", "w_class_probs")), col_names = c("queryID", "taxID", "log_prob", "level", "class")) %>%
mutate(prob_class = exp(log_prob)) %>%
select(queryID, class, prob_class)
remove.packages("taxize")
install.packages("taxize")
remotes::install_github("ropensci/taxize")
mismatch_natrix <- taxize::classification("Natrix natrix", db="col", return_id=FALSE, rows=1)
View(mismatch_natrix)
taxize::classification("Natrix natrix", db="col", return_id=FALSE, rows=1)
taxize::classification("Hemidactylus adensis", db="col", return_id=FALSE, rows=1)
taxize::classification("Hemidactylus awashensis", db="col", return_id=FALSE, rows=1)
install.packages(c("AICcmodavg", "bayestestR", "fields", "ggfittext", "rgdal", "seriation", "statmod", "tibble"))
install.packages("seriation")
install.packages("seriation")
library(tidyverse)
library(lubridate)
library(readr)
library(arsenal)
library(labelled)
setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/7_ecological_analysis/Rdata")
load("input_data_step5_20190204.RData")
setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/7_ecological_analysis/Rdata")
load("input_data_step5_20190204.RData")
# mock soup datasets
mockdf <- left_join(mock_design, species, by = c("input_sp" = "sp")) %>%
select(sample, experiment, run, input_amount, Order, Family, Genus, Species_BOLD, mitogenome) %>%
filter(experiment != "negctrl" & run == 2 & str_starts(sample, "PlateGH")) %>%
mutate(
Species_BOLD = case_when(
input_amount == 0.2 ~ "Lepidoptera_Bombycidae_Bombyx_mori_COI_SPIKE_0.2",
input_amount == 0.4 ~ "Coleoptera_Mordellidae_COI_SPIKE_0.4",
input_amount == 0.8 ~ "Coleoptera_Elateridae_COI_SPIKE_0.8",
TRUE ~ as.character(Species_BOLD)
)
) %>%
select(-run) %>%
arrange(sample, desc(input_amount)) %>%
mutate(
sample = str_remove(sample, "_2")
) %>%
set_variable_labels(input_amount = "ng") # labelled::set_variable_labels
# mockdftest <- mockdf %>%
# var_label(iris) <- list(Petal.Length = "Length of petal", Petal.Width = "Width of Petal")
# environmental datasets
mergedf <- left_join(env_data_mitogenome, env_design)
mergedf <- left_join(mergedf, species)
mergedf <- mergedf %>% filter(run == "idx_meta_genomecov_GH")
mergedf <- mergedf %>% select(sample, COI, everything())
mergesumm <- function(x) {
df <- mergedf %>%
filter(year(date) == x) %>%
mutate(
COI = case_when(
sp == "spike1" ~ "Lepidoptera_Bombycidae_Bombyx_mori_COI_SPIKE_0.2",
sp == "spike2" ~ "Coleoptera_Mordellidae_COI_SPIKE_0.4",
sp == "spike3" ~ "Coleoptera_Elateridae_COI_SPIKE_0.8",
TRUE ~ as.character(COI)
)
) %>%
mutate(
PC = case_when(
str_starts(sp, "spike") == TRUE ~ 1.0,
TRUE ~ as.numeric(PC)
)
) %>%
group_by(COI) %>%
summarise(
max_PC = max(PC),
sum_mapped_reads=sum(mapped_reads),
Order = first(Order),
Family = first(Family),
Genus = first(Genus),
Species_BOLD = first(Species_BOLD),
mitogenome = first(mitogenome)
) %>%
arrange(desc(sum_mapped_reads)) %>%
labelled::set_variable_labels(COI = "barcode seq name", max_PC = "% cov mapped to seq", sum_mapped_reads = "measure of DNA biomass")
df
}
mergedf2003 <- mergesumm(2003)
mergedf2004 <- mergesumm(2004)
mergedf2005 <- mergesumm(2005)
load("/Users/Negorashi2011/Dropbox/Working_docs/Kelpie/data_20190419/Kelpie_input_species_20190420.RData")
load("/Users/Negorashi2011/Dropbox/Working_docs/Kelpie/data_20190419/Kelpie_input_species_20190420.RData")
View(mockdf)
View(mergedf2005)
View(mockdf)
View(mergedf2005)
View(mockdf)
